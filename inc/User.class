<?php
/////////////////////////////////////////////////////////////
//   C L A S S   F O R   U S E R
/////////////////////////////////////////////////////////////

class User {
  var $user_no;
  var $new_record;

  function User( $id, $new_record = false ) {
    global $session;
    $this->user_no = 0;
    if ( !$session->logged_in ) return false;
    $loaded = false;
    $id = intval("$id");
    if ( $new_record != true ) {
      // Try and load it from file
      $sql = "SELECT usr.*, organisation.org_name ";
      $sql .= " FROM usr  NATURAL JOIN organisation ";
      $sql .= " WHERE usr.user_no = '$id'";
      if ( !($session->AllowedTo('Admin') || $session->AllowedTo('Support') || $session->AllowedTo('Manage')) )
        $sql .= " AND usr.user_no = '$session->user_no' ";
      else if ( $session->AllowedTo('Manage') && !($session->AllowedTo('Admin') || $session->AllowedTo('Support')) )
        $sql .= " AND usr.org_code = '$session->org_code' ";

      if ( $qry = new PgQuery($sql) ) {
        if ( $qry->Exec("newUser")
                && $qry->rows == 1 && $row = $qry->Fetch() ) {
          $this->new_record = false;
          while( list($k,$v) = each($row) ) {
            if ( isset($debuggroups['User']) && $debuggroups['User'] ) {
              $session->Log("DBG: \$this->{'%-25.25s = %s", "$k'}", $v);
            }
            $this->{$k} = $v;
          }
          $this->settings = new Setting( $this->config_data );
          if ( is_object( $this->settings ) ) {
            $this->base_font_size = $this->settings->get('fontsize');
            $this->box_rows  = $this->settings->get('bigboxrows');
            $this->box_cols  = $this->settings->get('bigboxcols');
          }
          if ( "$this->base_font_size" == "" ) $this->base_font_size = "11";
          if ( "$this->box_rows"  == "" ) $this->box_rows  = "10";
          if ( "$this->box_cols"  == "" ) $this->box_cols  = "60";

        }
      }
    }
    else {
      $this->new_record = true;
      $this->user_no = $id;
      // Assign some defaults because it looks like we're starting a new one
      if ( isset($_GET['user_template']) ) {
        // Oh goody, we can get some defaults from a saved template :-)
        $loaded = false;  // templates aren't done yet :-(
      }
      if ( ! $loaded ) {
        // Initialise to standard default values
      }
    }
  }

  /////////////////////////////////////////////////////////////
  // AllowedTo - Can the user do that?
  /////////////////////////////////////////////////////////////
  function AllowedTo ( $whatever )
  {
    return ( isset($this->roles[$whatever]) && $this->roles[$whatever] );
  }


  function GetRoles ()
  {
    $this->roles = array();
    $qry = new PgQuery( 'SELECT group_name AS role_name FROM group_member m join ugroup g ON g.group_no = m.group_no WHERE user_no = ? ', $this->user_no );
    if ( $qry->Exec('Login') && $qry->rows > 0 )
    {
      while( $role = $qry->Fetch() )
      {
        $this->roles[$role->role_name] = true;
      }
    }
  }

  /////////////////////////////////////////////////////////////
  // Render - Return HTML to show the W/R
  //   A separate function is called for each logical area
  //   on the W/R.
  /////////////////////////////////////////////////////////////
  function Render( ) {
    global $session, $edit;
    $html = "";

    $ef = new EntryForm( $REQUEST_URI, $this, $edit );
    $ef->NoHelp();  // Prefer this style, for the moment

    if ( $edit ) $html .= $ef->StartForm( array("autocomplete" => "off", "onsubmit" => "return CheckUserForm();" ) );

    $html .= "<table width=\"100%\" class=\"data\" cellspacing=\"0\" cellpadding=\"0\">\n";

    $html .= $this->RenderDetails($ef);

    if ( $session->AllowedTo("Admin") || $session->AllowedTo("Support") || $session->AllowedTo("Manage") ) {
      $html .= $this->RenderAccessRoles($ef);
    }
    $html .= $this->RenderFontChoices($ef);
    $html .= $this->RenderSystemRoles($ef);
    $html .= $this->RenderOrganisationRoles($ef);

    $html .= "</table>\n";
    if ( $edit ) {
      $html .= '<div id="footer">';
      $html .= $ef->SubmitButton( "submit", ($this->new_record ? "Create" : "Update") );
      $html .= '</div>';
      $html .= $ef->EndForm();
    }

    return $html;
  }


  function RenderDetails( $ef ) {
    global $edit, $session, $bigboxcols, $bigboxrows;
    $html = "";
    $html .= $ef->BreakLine("System Details");

    $html .= $ef->DataEntryLine( "User Name", "%s", "text", "username",
              array( "size" => 20, "title" => "The name this user can log into the system with.") );
    if ( $ef->editmode ) {
      $this->new_password = '******';
      unset($_POST['new_password']);
      $html .= $ef->DataEntryLine( "New Password", "%s", "password", "new_password",
                array( "size" => 20, "title" => "The user's password for logging in.") );
      $this->confirm_password = '******';
      unset($_POST['confirm_password']);
      $html .= $ef->DataEntryLine( "Confirm", "%s", "password", "confirm_password",
                array( "size" => 20, "title" => "Confirm the new password.") );
    }

    $html .= $ef->DataEntryLine( "Full Name", "%s", "text", "fullname",
              array( "size" => 50, "title" => "The description of the system.") );

    $html .= $ef->DataEntryLine( "Email", "%s", "text", "email",
              array( "size" => 50, "title" => "The user's e-mail address.") );

    // Organisation drop-down
    if ( $session->AllowedTo("Admin") || $session->AllowedTo("Support") ) {
      $sql = "SELECT org_code, org_name || ' (' || abbreviation || ')' AS org_name ";
      $sql .= "FROM organisation WHERE active AND abbreviation !~ '^ *$' ";
      $sql .= "AND EXISTS(SELECT user_no FROM usr WHERE usr.org_code = organisation.org_code AND usr.status != 'I') ";
      $sql .= "AND EXISTS(SELECT work_system.system_code FROM org_system JOIN work_system ON (org_system.system_code = work_system.system_code) WHERE org_system.org_code = organisation.org_code AND work_system.active) ";
      $sql .= "ORDER BY lower(org_name)";
      $html .= $ef->DataEntryLine( "Organisation", "$this->org_name", "lookup", "org_code",
                array("_sql" => $sql, "_null" => "--- select an organisation ---", "onchange" => "OrganisationChanged();",
                      "title" => "The organisation that this person is a part of." ) );

      $html .= $ef->DataEntryLine( "Hourly Rate", "%s", "text", "base_rate",
                array( "size" => 10, "title" => "The base hourly rate that this person is charged at.") );

    }
    else {
      if ( $this->new_record ) $this->org_name = $session->org_name;
      $html .= $ef->DataEntryLine( "Organisation", "$this->org_name", "", "" );
    }

    $html .= $ef->DataEntryLine( "Location", "%s", "text", "location",
              array( "size" => 50, "title" => "The user's normal location within their organisation.") );

    $html .= $ef->DataEntryLine( "Phone", "%s", "text", "phone",
              array( "size" => 20, "title" => "The user's normal phone number during business hours.") );

    $html .= $ef->DataEntryLine( "Mobile", "%s", "text", "mobile",
              array( "size" => 20, "title" => "The user's mobile phone number.") );

    $this->active = ( $this->status != 'I' ? "t" : "f");
    $html .= $ef->DataEntryLine( "Active?", ($this->status != 'I' ? "Active" : "Inactive"), "checkbox", "active",
              array("_label" => "Uncheck to make the user inactive.") );

    $html .= $ef->DataEntryLine( "Send Email?", ($this->email_ok == 't' ? "Yes" : "No"), "checkbox", "email_ok",
              array("_label" => "Uncheck to ensure the user gets no e-mail.") );

    return $html;
  }

  function RenderFontChoices( $ef ) {
    global $session;
    $html = "";

    $html .= '<tr><th class="prompt">Font Size</th><td class="entry">';

    if ( $ef->editmode ) {
      for( $i=7; $i < 22; $i += 2 ) {
        $html .= $ef->DataEntryField( "", "radio", "base_font_size",
              array("title"  => "Choose the base size for fonts to be displayed for you.",
                    "value"  => "$i",
                    "_label" => sprintf('%spt.',$i)) );
      }
    }
    else {
      $html .= sprintf( "%d pt.", $this->base_font_size);
    }
    $html .= '</td></tr>'."\n";

    $html .= '<tr><th class="prompt">Entry Boxes</th><td class="entry">';
    if ( $ef->editmode ) {
      $html .= " Rows: ";
      $html .= $ef->DataEntryField( "", "text", "box_rows",
              array("title"  => "Choose the number of rows for default text entry.",
                    "size"   => 4) );
      $html .= " &nbsp; Columns: ";
      $html .= $ef->DataEntryField( "", "text", "box_cols",
              array("title"  => "Choose the number of rows for default text entry.",
                    "size"   => 4) );
    }
    else {
      $html .= sprintf( "%d rows x %d columns", $this->box_rows, $this->box_cols);
    }
    $html .= '</td></tr>'."\n";

    return $html;
  }


  function RenderAccessRoles( $ef ) {
    global $session;
    $html = "";

    $sql = "SELECT * FROM ugroup LEFT JOIN group_member ";
    $sql .= "ON (ugroup.group_no = group_member.group_no AND group_member.user_no = $this->user_no) ";
    if ( ! $session->AllowedTo('Admin') ) {
      $sql .= "WHERE EXISTS(SELECT 1 from group_member gm WHERE gm.user_no=$session->user_no AND gm.group_no=group_member.group_no) ";
    }
    $sql .= "ORDER BY ugroup.group_no";


    # Select the records
    $q = new PgQuery($sql, $user_no, $user_no);
    if ( $q && $q->Exec() && $q->rows ) {
      $html .= '<tr><th class="prompt">User Roles</th><td class="entry">';

      $i=0;
      while( $row = $q->Fetch() ) {
        if ( $ef->editmode ) {
          $this->group_member[$row->group_no] = 't';
          $html .= $ef->DataEntryField( "", "checkbox", "group_member[$row->group_no]",
                array("title" => "Is this user a member of this group?" ) );
          $html .= " " . ucfirst($row->module_name) . " $row->group_name ";
        }
        else {
          if ( $row->user_no != "" ) {
            if ( $i++ > 0 ) $html .= ", ";
            $html .= ucfirst($row->module_name) . " " . $row->group_name;
          }
        }
      }
    }
    $html .= '</td></tr>'."\n";

    return $html;
  }


  function RenderSystemRoles( $ef ) {
    global $session;
    $html = "";

    $sql = "SELECT lookup_code, lookup_desc FROM lookup_code ";
    $sql .= "WHERE source_table = 'system_usr' AND source_field = 'role' ORDER BY lookup_seq;";
    $q = new PgQuery($sql, $user_no, $user_no);
    if ( $q && $q->Exec("User::RenderSystemRoles1") && $q->rows ) {
      $roles = array('_' => '-- No Access --');
      while( $row = $q->Fetch() ) {
        if ( !($session->AllowedTo('Admin') || $session->AllowedTo('Support'))
                && ($row->lookup_code == 'A' || $row->lookup_code == 'S') ) continue;
        $roles["_$row->lookup_code"] = $row->lookup_desc;
      }
    }

    $sql = "SELECT work_system.*, system_usr.role ";
    $sql .= "FROM work_system LEFT JOIN system_usr ";
    $sql .= "ON (work_system.system_code = system_usr.system_code AND system_usr.user_no = $this->user_no) ";
    $sql .= "WHERE work_system.active ";
    if ( ($session->AllowedTo('Admin') || $session->AllowedTo('Support'))
                      && ($this->AllowedTo('Admin') || $this->AllowedTo('Support')) ) {
      // Actually, we do nothing in this case...
    }
    elseif ( $session->AllowedTo('Admin') || $session->AllowedTo('Support') ) {
      $sql .= "AND EXISTS( SELECT 1 from org_system WHERE org_system.org_code = $this->org_code AND org_system.system_code = work_system.system_code) ";
    }
    else {
      $sql .= "AND EXISTS( SELECT 1 from org_system WHERE org_system.org_code = $session->org_code AND org_system.system_code = work_system.system_code) ";
    }
    $sql .= "ORDER BY lower(work_system.system_code)";


    # Select the records
    $q = new PgQuery($sql);
    $column = 0;
    if ( $q && $q->Exec("User::RenderSystemRoles2") && $q->rows ) {
      $html .= $ef->BreakLine("Active System Roles");
      $html .= '<tr><th class="prompt">&nbsp;</th><td class="entry"><table width="100%">'."\n";

      while( $row = $q->Fetch() ) {
        $html .= sprintf( '<tr class="row%d">', $q->rownum % 2);
        if ( trim($row->system_desc) == "" ) $row->system_desc = "&lt;&lt;&lt;unknown&gt;&gt;&gt;";
        $html .= '<td class="entry">';
        $html .= "<a href=\"/system.php?system_code=$row->system_code\">$row->system_desc</a>";
        $html .= "</td>";
        $html .= '<td class="entry">';
        if ( $ef->editmode  && ($session->AllowedTo('Admin') || $session->AllowedTo('Support')) ) {
          $options = array_merge($roles, array("title" => "Select the role this person has in relation to this system"));
          $html .= sprintf("<span style=\"color: %s; white-space: normal;\">", ( "$row->role" == "" ? "black" : "red") );
          $this->role[$row->system_code] = $row->role;
          $html .= $ef->DataEntryField( "", "select", "role[$row->system_code]", $options );
          $html .= "</span>";
        }
        else {
          $html .= $row->role . " - " . $roles["_$row->role"];
        }
        $html .= "</td></tr>";
      }
    }
    $html .= '</table></td></tr>'."\n";

    return $html;
  }


  function RenderOrganisationRoles( $ef ) {
    global $session;
  }

  function Validate( $ef ) {
    global $session, $client_messages;
    $session->Log("DBG: User::Validate: Validating user");

    if ( isset($_POST) ) {
      $valid = true;
      $_POST['status'] = ( isset($_POST['active']) ? 'A' : 'I' );

      if ( trim($_POST['fullname']) == "" ) {
        $client_messages[] = "ERROR: The full name may not be blank.";
        $valid = false;
      }

      return $valid;
    }

    $client_messages[] = "ERROR: No form data submitted!";
    return false;
  }

  function Write( $ef ) {
    global $session, $client_messages;

    $session->Log("DBG: User::Write: Writing usr form details to database");
    $client_messages[] = "Writing user details to database.";

    $qry = new PgQuery("BEGIN");   $qry->Exec("User::Write");

    if ( !is_object($this->settings)) $this->settings = new Setting;
    $this->settings->set('fontsize', $_POST['base_font_size']);
    $this->settings->set('bigboxrows', $_POST['box_rows']);
    $this->settings->set('bigboxcols', $_POST['box_cols']);
    if ( is_object( $this->settings ) ) $_POST['config_data'] = $this->settings->to_save();

    if ( $_POST['new_password'] != '******' && $_POST['new_password'] == $_POST['confirm_password'] ) {
      $newpw = session_salted_md5($_POST['new_password']);
      $_POST['password'] = $newpw;
      $session->Log("DBG: New salted password = $newpw");
    }
    else if ( $_POST['new_password'] != '******' && $_POST['new_password'] != $_POST['confirm_password'] ) {
      $client_messages[] = "WARNING: Confirmation password does not match - the password was not changed.";
    }
    else {
      unset($_POST['password']);
    }

    $sql = sql_from_post( $_POST['submit'], "usr", "WHERE user_no='$this->user_no'");
    $qry = new PgQuery($sql);
    if ( !$qry->Exec("User::Write") ) $client_messages[] = "ERROR: $qry->errorstring";

    $systems = "";
    $role_update = "";
    while( list($k,$v) = each($_POST['role']) ) {
      if ( $v ) {
        $systems .= ( "$systems" == "" ? "" : ", " );
        $systems .= "'" . str_replace("'","''",str_replace('\\','', $k)) . "'";
        $role_update .= "SELECT set_system_role($this->user_no,'" . str_replace("'","''",str_replace('\\','', $k))
                        . "','" . str_replace("'","''",str_replace('\\','', $v)) . "');";
      }
    }
    if ( $systems == "" )
      $sql = "DELETE FROM system_usr WHERE user_no = '$this->user_no';";
    else
      $sql = "DELETE FROM system_usr WHERE user_no = '$this->user_no' AND system_code NOT IN ( $systems ); $role_update";
    $qry = new PgQuery($sql);
    if ( !$qry->Exec("Sys::Write") ) $client_messages[] = "ERROR: $qry->errorstring";

    $qry = new PgQuery("COMMIT;");  $qry->Exec("Sys::Write");

    return true;
  }

}
?>